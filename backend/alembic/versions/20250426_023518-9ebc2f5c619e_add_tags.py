"""add tags

Revision ID: 9ebc2f5c619e
Revises: 6222a12e4737
Create Date: 2025-04-26 02:35:18.349666+00:00

"""

from collections.abc import Sequence

import sqlalchemy as sa
import sqlmodel.sql.sqltypes

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "9ebc2f5c619e"
down_revision: str | None = "6222a12e4737"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "tag",
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("color", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "tagconferencelink",
        sa.Column("tag_id", sa.Uuid(), nullable=False),
        sa.Column("conference_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(["conference_id"], ["conference.id"]),
        sa.ForeignKeyConstraint(["tag_id"], ["tag.id"]),
        sa.PrimaryKeyConstraint("tag_id", "conference_id"),
    )
    op.add_column("conference", sa.Column("created_by_user_id", sa.Uuid(), nullable=False))
    op.create_foreign_key(None, "conference", "user", ["created_by_user_id"], ["id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "conference", type_="foreignkey")  # type: ignore[arg-type]
    op.drop_column("conference", "created_by_user_id")
    op.drop_table("tagconferencelink")
    op.drop_table("tag")
    # ### end Alembic commands ###
