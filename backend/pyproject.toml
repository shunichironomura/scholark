[project]
name = "scholark"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
authors = [
    { name = "Shunichiro Nomura", email = "nomura@space.t.u-tokyo.ac.jp" },
]
requires-python = ">=3.13"
dependencies = [
    "alembic>=1.15.2",
    "fastapi[standard]>=0.115.12",
    "ldap3>=2.9.1",
    "passlib[bcrypt]>=1.7.4",
    "psycopg[binary]>=3.2.6",
    "pydantic>=2.11.3",
    "pydantic-extra-types>=2.10.3",
    "pydantic-settings>=2.9.1",
    "pyjwt>=2.10.1",
    "sqlmodel>=0.0.24",
    "uvicorn[standard]>=0.34.2",
]

[build-system]
requires = ["uv_build>=0.8.0,<0.9.0"]
build-backend = "uv_build"

[dependency-groups]
dev = [
    { include-group = "typing" },
    { include-group = "ruff" },
    "pre-commit>=4.2.0",
]
ruff = ["ruff>=0.11.6"]
typing = [
    "mypy>=1.15.0",
    "ty>=0.0.1a14",
    "pyright>=1.1.399",
    "types-ldap3>=2.9.13.20240205",
    "types-passlib>=1.7.7.20250408",
    "pyrefly>=0.23.1",
]

[tool.mypy]
strict = true

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = ["ALL"]

ignore = [
    #     "PLR2004", # magic numbers
    "S101",   # use of assert
    "G",      # logging format
    "D100",   # missing docstring in public module
    "D101",   # missing docstring in public class
    "D102",   # missing docstring in public method
    "D103",   # missing docstring in public function
    "D104",   # missing docstring in public package
    "D105",   # missing docstring in magic method
    "D107",   # missing docstring in __init__
    "D203",   # 1 blank line required before class docstring
    "D213",   # multi-line docstring summary should start at the second line
    "ANN401", # Dynamically typed expressions (typing.Any) are disallowed
    "TD002",  # Missing author in TODO
    "TD003",  # add link on issue into TODO
    #     "PLR0913", # Too many arguments to function call
    "ERA001", # Commented out code
    "FIX002", # Fixme comment
    #     "S311",    # suspicious-non-cryptographic-random-usage
    #     "EM101",   # raw-string-in-exception
    #     "TRY003",  # Avoid specifying long messages outside the exception class
]

unfixable = [
    "F401", # Prevent auto-fix for unused imports
]

[tool.ruff.lint.per-file-ignores]
"alembic/**.py" = [
    "D",      # Docstring
    "INP001",
    "ERA001",
]
